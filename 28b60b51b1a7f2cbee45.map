{"version":3,"sources":["/home/me/dev/eota/eota/client/eota-expo/assets/eota-qr-code-logo.png","/home/me/dev/eota/eota/client/eota-expo/client-routes.ts","/home/me/dev/eota/eota/client/eota-expo/styles.ts","/home/me/dev/eota/eota/client/eota-expo/utils.tsx","/home/me/dev/eota/eota/client/eota-expo/components/Delayed.tsx","/home/me/dev/eota/eota/client/eota-expo/components/LoadingIndicator.tsx","/home/me/dev/eota/eota/client/eota-expo/routing-common.tsx","/home/me/dev/eota/eota/client/eota-expo/components/HomePage.tsx","/home/me/dev/eota/eota/client/eota-expo/firebase-util.ts","/home/me/dev/eota/eota/client/eota-expo/components/LoginScreen.tsx","/home/me/dev/eota/eota/client/eota-expo/components/BarcodeScanner.tsx","/home/me/dev/eota/eota/client/eota-expo/components/EotaCode.tsx","/home/me/dev/eota/eota/client/eota-expo/components/Transactions.tsx","/home/me/dev/eota/eota/client/eota-expo/App.tsx","/home/me/dev/eota/eota/client/eota-expo/web-build/register-service-worker.js","/home/me/dev/eota/eota/client/eota-expo/assets/eota-qr-code-logo-full-splash.png","/home/me/dev/eota/eota/client/eota-expo/assets/feather-1024-white-background.png","/home/me/dev/eota/eota/client/eota-expo/assets/Montserrat-ExtraLight.ttf","/home/me/dev/eota/eota/client/eota-expo/assets/Montserrat-Medium.ttf"],"names":["module","exports","ROUTES","home","login","payInStore","startTransaction","balance","colors","placeholderTextColor","buttonDarkText","facebookBlue","prettyBlue","googleBlue","googleRed","googleYellow","googleGreen","eotaButtonBase","borderRadius","height","marginBottom","marginHorizontal","backgroundColor","eotaButton","borderColor","borderWidth","eotaButtonTitle","color","paragraph","fontSize","fontWeight","textAlign","container","flex","justifyContent","alignSelf","alignContent","alignItems","paddingTop","Constants","statusBarHeight","padding","maxWidth","maxHeight","loadingScreenText","logoText","fontFamily","margin","marginTop","loginFormTextInput","paddingHorizontal","eotaTextInput","emailLoginButton","buttonMarginButtom","fbLoginButton","googleLoginButton","appleLoginButton","transparentButton","commitButton","EotaStylesContext","React","createContext","styles","alertFn","Platform","select","android","Alert","alert","ios","web","msg","detail","default","console","log","alertScreen","AuthContext","user","userIdToken","logOut","APPROVED_PAYCODE_URL_REGEX","RegExp","RouteAuthed","path","rest","useContext","to","pathname","routes","state","referrer","isNative","OS","dismissKeyboardIfNative","Keyboard","dismiss","KeyboardDismissable","props","TouchableWithoutFeedback","onPress","children","Delayed","useState","delayFinished","setDelayFinished","useTimeout","delayMs","View","style","LoadingIndicator","LinkButton","Consumer","context","history","push","authContext","utils","loggingOut","setLoggingOut","Text","type","name","size","title","icon","iconContainerStyle","firebaseConfig","apiKey","authDomain","projectId","googleConfig","facebookConfig","withLocalPersistence","firebase","setPersistence","Auth","Persistence","LOCAL","authSignUpWithEmail","email","password","then","createUserWithEmailAndPassword","authLogInWithEmail","signInWithEmailAndPassword","panic","err","message","code","googleAuthOffered","facebookAuthOffered","emailIsValid","trim","test","passwordIsValid","length","loginWithFacebook","onCancel","a","async","Facebook","permissions","response","cancelledByUser","token","oauthCredential","FacebookAuthProvider","credential","signInWithCredential","userCredential","result","JSON","stringify","loginWithGoogle","Google","androidClientId","androidStandaloneAppClientId","iosClientId","iosStandaloneAppClientId","clientId","scopes","loginResult","Promise","resolve","idToken","accessToken","GoogleAuthProvider","catch","logUser","LoginScreen","auth","authenticated","setAuthenticated","useEffect","location","setEmail","setPassword","signingUp","setSigningUp","indicateLoggingIn","setIndicateLoggingIn","cancelLogin","emailInputRef","useRef","passwordInputRef","loginWith","loginFn","submitEmailAndPasswordForm","loginEmail","loginPassword","firebaseUtil","emailInput","EmailInput","ref","onChangeText","onSubmitEditing","current","focus","passwordInput","PasswordInput","loginForm","titleStyle","buttonStyle","signupForm","iconRight","KeyboardAvoidingView","behavior","flexDirection","extraNativePropsEmail","textContentType","autoCompleteType","forwardRef","TextInput","placeholder","keyboardType","clearButtonMode","autoCapitalize","returnKeyType","extraNativePropsPassword","secureTextEntry","androidPkg","manifest","releaseChannel","package","openCameraSettings","IntentLauncher","data","Linking","openURL","getCameraPermission","Permissions","status","GRANTED","error","BarcodeScanner","hasCameraPermission","setHasCameraPermission","res","handleBarCodeScanned","emitResult","whatToDisplay","useMemo","BarCodeScanner","onBarCodeScanned","barCodeTypes","BarCodeType","qr","StyleSheet","absoluteFillObject","Error","cancelButton","EOTA_LOGO_BLOB","require","EotaCode","value","TouchableOpacity","overflow","logo","logoSize","logoBackgroundColor","ecl","getRef","API_BASEURL","makeApiError","ApiError","json","responseJson","alertApiError","errorResponse","errorMessage","getHeaders","Authorization","Accept","eotaApiCreateTransaction","body","signal","fetch","method","headers","ok","TransactionInfo","timeUsec","txn","p","amount","recipientDisplayName","recipientEmail","desc","timeUsecCreated","Date","toLocaleString","textDecorationLine","id","getQRCodeSize","Dimensions","get","heightOverflow","width","CreateTransaction","promiseFn","onReject","Pending","Fulfilled","ShowTransaction","useFetch","setData","run","reload","pollingInterval","setPollingInterval","useInterval","timeUsecPaid","warn","StartTransaction","setAmount","description","setDescription","inputCommitted","setInputCommitted","currency_code","errorMsg","getDollarsErrorMsg","val","exec","split","DollarsInput","setErrorMsg","leftIcon","leftIconContainerStyle","marginLeft","marginRight","errorStyle","t","inputStyle","containerStyle","DescriptionInput","errorColor","setErrorColor","maxLength","MAX_DESCRIPTION_LENGTH","text","remaining","getTxnDescriptionError","PayInStore","paycode","setPaycode","userCancelled","setUserCancelled","paymentConfirmed","setPaymentConfirmed","invoiceId","onSendPayment","url","match","isApprovedPaycode","matchedUrl","tryParsePaycode","isValidPaycode","eotaApiRequestTxn","params","DisplayInvoice","Rejected","eotaApiPayTxn","PayInvoice","eotaApiGetUser","uid","CheckBalance","authUser","addingMoney","setAddingMoney","onAddMoney","AddMoneyView","isPending","balanceUSD","amountToAdd","addition","SeeBalanceView","paddingBottom","disabled","disabledStyle","disabledTitleStyle","paddingVertical","theme","Button","baseStyles","primary","secondary","signOut","EotaApp","receiveNewUser","currentUser","setUser","setUserIdToken","getIdToken","onAuthStateChanged","Provider","component","HomePage","FadeInView","Animated","Value","fadeInAnimation","timing","toValue","duration","start","opacity","BLOBS","AsyncLoadApp","assetsReady","setAssetsReady","AppLoading","startAsync","all","map","blob","Asset","fromModule","downloadAsync","Font","onFinish","onError","App","navigator","window","addEventListener","serviceWorker","register","scope","info"],"mappings":"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","file":"static/js/app.fc1e53e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/eota-qr-code-logo.30f65d4e.png\";","export const ROUTES = {\n  home: '/home',\n  login: '/login',\n  payInStore: '/send-money',\n  startTransaction: '/start-transaction',\n  balance: '/balance',\n};\n\nexport default ROUTES;\n","import { ViewStyle, TextStyle } from 'react-native';\n\nimport Constants from 'expo-constants';\n\nconst prettyBlue = '#3897f1';\n\nexport const colors = {\n  placeholderTextColor: '#c4c3cb',\n  buttonDarkText: '#45454e',\n\n  facebookBlue: '#3b5998',\n  prettyBlue: prettyBlue,\n  googleBlue: '#4285f4',\n  googleRed: '#ea4335',\n  googleYellow: '#fbbc05',\n  googleGreen: '#34a853',\n};\n\nconst buttonMarginButtom = 8;\n\nexport const eotaButtonBase: ViewStyle = {\n  borderRadius: 6,\n  height: 45,\n  marginBottom: buttonMarginButtom,\n  marginHorizontal: 15,\n  backgroundColor: 'rgba(0,0,0,0)',\n};\n\nexport const eotaButton: ViewStyle = {\n  ...eotaButtonBase,\n  borderColor: colors.buttonDarkText,\n  borderWidth: 0.7,\n};\nexport const eotaButtonTitle: TextStyle = {\n  color: colors.buttonDarkText,\n};\n\nexport const paragraph: TextStyle = {\n  fontSize: 18,\n  fontWeight: 'normal',\n  textAlign: 'center',\n  color: colors.buttonDarkText,\n  marginBottom: 12,\n  marginHorizontal: 15,\n};\n\nexport const container: ViewStyle = {\n  flex: 1,\n  justifyContent: 'center',\n  alignSelf: 'stretch',\n  alignContent: 'stretch',\n  alignItems: 'stretch',\n  paddingTop: Constants.statusBarHeight,\n  padding: 8,\n  backgroundColor: '#fff',\n  maxWidth: 660,\n  maxHeight: 1280,\n};\n\nexport default {\n  container: container,\n  paragraph: paragraph,\n  loadingScreenText: <TextStyle>{\n    ...paragraph,\n    color: '#666',\n  },\n  logoText: <TextStyle>{\n    fontFamily: 'montserrat-extra-light',\n    fontSize: 60,\n    margin: 20,\n    marginTop: 10,\n    paddingTop: 20,\n    textAlign: 'center',\n  },\n  loginFormTextInput: <TextStyle>{\n    height: 43,\n    fontSize: 14,\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: '#eaeaea',\n    paddingHorizontal: 10,\n    marginHorizontal: 15,\n    marginBottom: buttonMarginButtom,\n  },\n  eotaTextInput: <TextStyle>{\n    fontSize: 14,\n  },\n  eotaButton: eotaButton,\n  emailLoginButton: <ViewStyle>{\n    ...eotaButton,\n    marginBottom: buttonMarginButtom + 10,\n  },\n  eotaButtonTitle: eotaButtonTitle,\n  fbLoginButton: <ViewStyle>{\n    ...eotaButtonBase,\n  },\n  googleLoginButton: <ViewStyle>{\n    ...eotaButtonBase,\n  },\n  appleLoginButton: <ViewStyle>{\n    ...eotaButtonBase,\n    marginHorizontal: 15,\n  },\n  transparentButton: <ViewStyle>{\n    ...eotaButtonBase,\n    backgroundColor: '#eeeeee',\n  },\n  commitButton: <ViewStyle>{\n    ...eotaButtonBase,\n    backgroundColor: prettyBlue,\n  },\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport { Redirect, Route } from './routing';\n\nimport routes from './client-routes';\nimport styles, { colors } from './styles';\n\nimport axios, { AxiosResponse, AxiosRequestConfig } from 'axios';\nimport {\n  Platform,\n  Alert,\n  Keyboard,\n  TouchableWithoutFeedback,\n} from 'react-native';\n\nimport * as firebase from 'firebase/app';\n\nexport const EotaStylesContext = React.createContext({\n  styles: styles,\n  colors: colors,\n});\n\ntype AlertFn = (msg: string, detail?: string) => void;\n\nconst alertFn = Platform.select<AlertFn>({\n  android: Alert.alert,\n  ios: Alert.alert,\n  web: (msg, detail) => alert(msg + (detail ? ` -- ${detail}` : '')),\n  default: (msg, detail) =>\n    console.log(`tried to alert to the screen on unsupported platform`),\n});\n\n// prefer to not use this. it's intrusive (and annoying)\nexport const alertScreen: AlertFn = (msg, detail) => {\n  console.log(`sending alert to screen, message: [${msg}], detail: [${detail}]`);\n  alertFn(msg, detail);\n};\n\ninterface IAuthContext {\n  user: firebase.User | null;\n  userIdToken: string | null;\n  logOut: () => Promise<void>;\n}\n\nconst DEFAULT_AUTH_CONTEXT: IAuthContext = {\n  user: null,\n  userIdToken: null,\n  logOut: null,\n};\n\nexport const AuthContext = React.createContext(DEFAULT_AUTH_CONTEXT);\n\n// Code has format:\n//   https://eota.me/code/[CODE_GOES_HERE]\n//\n// The reason it's a url rather than a raw code (which is what we ultimately want)\n// is because we'd like to allow any qr-code scanner to scan it and send them\n// to some kind of signup page or perhaps even 'checkout as guest' type of thing.\n//\n// TODO(nolan): perhaps pull from a config file / runtime env\n\nconst APPROVED_PAYCODE_URL_REGEX = RegExp(`https://eota.me/code/([^\\\\s]+)`);\n\ninterface IParsePaycodeResult {\n  paycode: string;\n  matchedUrl: string;\n}\n\nexport function tryParsePaycode(url: string): [boolean, IParsePaycodeResult] {\n  const match = APPROVED_PAYCODE_URL_REGEX.exec(url);\n  const isApprovedPaycode = !!match;\n  const result: IParsePaycodeResult = isApprovedPaycode\n    ? {\n        paycode: match[1],\n        matchedUrl: match[0],\n      }\n    : null;\n  return [isApprovedPaycode, result];\n}\n\n/**\n * Used just like Route, only this looks for and AuthContext and\n * redirects to login if no user is logged in\n **/\nexport const RouteAuthed = ({ path, ...rest }) =>\n  useContext(AuthContext).user ? (\n    <Route path={path} {...rest} />\n  ) : (\n    <Redirect\n      to={{\n        pathname: routes.login,\n        state: { referrer: path },\n      }}\n    />\n  );\n\nexport function useAxiosRequest(\n  axiosRequestFn: (config: AxiosRequestConfig) => Promise<AxiosResponse<any>>,\n  userIdToken: string,\n  startingConfig?: AxiosRequestConfig,\n  onFailure?: (error: any) => void,\n): AxiosResponse<any> {\n  const [response, setResponse] = useState(null);\n\n  useEffect(() => {\n    const fnString = JSON.stringify(axiosRequestFn);\n    const source = axios.CancelToken.source();\n    const newconfig = {\n      ...startingConfig,\n      headers: { Authorization: `Bearer ${userIdToken}` },\n      timeout: 5000,\n      cancelToken: source.token,\n    };\n    async function fetchData() {\n      try {\n        setResponse(await axiosRequestFn(newconfig));\n      } catch (err) {\n        if (axios.isCancel(err)) {\n          console.log(\n            `axios request programmatically cancelled. request function: ` +\n              `[${fnString}], error: [${JSON.stringify(err)}]`,\n          );\n        } else {\n          console.log(`panicking, got error [${JSON.stringify(err)}]`);\n          onFailure(err);\n        }\n      }\n    }\n    fetchData();\n    return () => source.cancel('axios request hook cleanup function called');\n  }, [axiosRequestFn, startingConfig, userIdToken]);\n\n  return response;\n}\n\nconst isNative = Platform.OS === 'ios' || Platform.OS === 'android';\n\nconst dismissKeyboardIfNative = () => {\n  if (isNative) Keyboard.dismiss();\n};\n\nexport const KeyboardDismissable = (props) => (\n  <TouchableWithoutFeedback onPress={dismissKeyboardIfNative}>\n    {/* <KeyboardAvoidingView behavior=\"padding\" {...props}> */}\n    {props.children}\n    {/* </KeyboardAvoidingView> */}\n  </TouchableWithoutFeedback>\n);\n","import React, { useState, useContext } from 'react';\nimport { View } from 'react-native';\n\nimport useTimeout from 'use-timeout';\n\nimport { EotaStylesContext } from '../utils';\n\ninterface DelayedProps {\n  delayMs: number;\n  children: any;\n}\n\nconst Delayed = (props: DelayedProps) => {\n  const { styles } = useContext(EotaStylesContext);\n  const [delayFinished, setDelayFinished] = useState(false);\n\n  useTimeout(() => setDelayFinished(true), props.delayMs);\n\n  return delayFinished && <View style={styles.container}>{props.children}</View>;\n};\n\nexport default Delayed;\n","import React from 'react';\nimport { View } from 'react-native';\nimport {\n  MaterialIndicator,\n  MaterialIndicatorProps,\n} from 'react-native-indicators';\n\nconst PALE_BLUE = 'rgba(56,151,241,0.4)';\n\nconst LoadingIndicator = (props: MaterialIndicatorProps) => (\n  <View style={{ margin: 30 }}>\n    <MaterialIndicator style={{ margin: 20 }} color={PALE_BLUE} {...props} />\n  </View>\n);\n\nexport default LoadingIndicator;\n","import React from 'react';\n\nimport { __RouterContext as RouterContext } from 'react-router';\nimport { Button, ButtonProps } from 'react-native-elements';\n\ninterface LinkProps {\n  to: string;\n}\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\nexport const LinkButton = ({\n  to,\n  ...rest\n}: LinkProps & Omit<ButtonProps, 'onPress'>) => (\n  <RouterContext.Consumer>\n    {(context) => <Button onPress={() => context.history.push(to)} {...rest} />}\n  </RouterContext.Consumer>\n);\n","import React, { useContext, useState } from 'react';\nimport { Text, View } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\n\nimport routes from '../client-routes';\nimport Delayed from './Delayed';\nimport * as utils from '../utils';\nimport LoadingIndicator from './LoadingIndicator';\nimport { LinkButton } from '../routing-common';\n\nexport default () => {\n  const authContext = useContext(utils.AuthContext);\n  const { styles } = useContext(utils.EotaStylesContext);\n  const [loggingOut, setLoggingOut] = useState(false);\n\n  if (loggingOut) {\n    authContext.logOut();\n    return (\n      <Delayed delayMs={100}>\n        <View>\n          <LoadingIndicator />\n          <Text style={styles.paragraph}>Logging out...</Text>\n        </View>\n      </Delayed>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={{ flex: 4, marginBottom: 20, justifyContent: 'flex-end' }}>\n        <Icon type=\"feather\" name=\"feather\" size={45} />\n        <Text style={styles.logoText}>eota</Text>\n      </View>\n      {/* Actions */}\n      <View style={{ flex: 5, justifyContent: 'flex-start' }}>\n        {/* Scan code */}\n        <LinkButton\n          to={routes.payInStore}\n          title=\"Scan a pay code\"\n          icon={{ type: 'material-community', name: 'qrcode-scan' }}\n          iconContainerStyle={{ marginHorizontal: 10 }}\n        />\n\n        {/* Start transaction */}\n        <LinkButton\n          to={routes.startTransaction}\n          title=\"Start a transaction\"\n          icon={{ type: 'feather', name: 'edit' }}\n          iconContainerStyle={{ marginHorizontal: 10 }}\n        />\n\n        {/* Balance */}\n        <LinkButton\n          to={routes.balance}\n          title=\"Balance\"\n          icon={{ type: 'feather', name: 'dollar-sign' }}\n          iconContainerStyle={{ marginHorizontal: 5 }}\n        />\n\n        {/* Log out */}\n        <View style={{ flex: 1, justifyContent: 'flex-end' }}>\n          <Button\n            title=\"Log out\"\n            onPress={() => setLoggingOut(true)}\n            icon={{ type: 'feather', name: 'arrow-left', size: 20 }}\n            iconContainerStyle={{ marginHorizontal: 10 }}\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n","// TODO: add appropriate logging (log roughly anything that\n// goes right or wrong with authentication).\n\n// Inspired by gist:\n// https://gist.github.com/scriptex/f0c3f1426d8c096602b5ac5f8313a9d1\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\n\nimport * as Facebook from 'expo-facebook';\nimport * as Google from 'expo-google-app-auth';\n\n// Can be found at:\n// https://console.firebase.google.com/project/eota-gcp/settings/general/\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDPCvFPHMLnMmlnMTTloqHOvL35AqHXars',\n  authDomain: 'eota-gcp.web.app',\n  projectId: 'eota-gcp',\n  // databaseURL: '<YOUR-DATABASE-URL>',\n  // storageBucket: '<YOUR-STORAGE-BUCKET>',\n};\n\n// TODO: \"OAuth is limited to 100 sensitive scope logins until the OAuth\n// consent screen is published. This may require a verification process that\n// can take several days.\"\n// Ensure oauth consent screen is published:\n// https://console.developers.google.com/apis/credentials/consent?project=eota-gcp&folder&organizationId&duration=P1D\nconst googleConfig = {\n  // TODO: correct package name from expo's for publishing\n  androidClientId:\n    '680742159141-natfrmficvrofb9vfhvac1mc1l0it6v4.apps.googleusercontent.com',\n  // TODO: correct bundle id from expo's for publishing\n  // TODO: add App store id to oauth setup\n  iosClientId:\n    '680742159141-jkb8vp076d4kjq24ia7icvmgs3b73s4s.apps.googleusercontent.com',\n};\n\n// Can be found at:\n// https://developers.facebook.com/apps/798034560635136/dashboard/\nconst facebookConfig = {\n  appId: '798034560635136',\n};\n\n/**\n * General Firebase actions\n */\n// Can only be called once. Multiple calls (with same app name) are illegal and cause failure.\nexport const firebaseInit = () => {\n  if (!firebase.apps.length) {\n    // prevent double initialization (which is illegal) on hot reload\n    const app = firebase.initializeApp(firebaseConfig);\n  }\n};\n\nexport const getCurrentUser = () => firebase.auth().currentUser;\n\nexport const onAuthStateChanged = (\n  receiveNewUser: (a: firebase.User | null) => void,\n) => void firebase.auth().onAuthStateChanged(receiveNewUser);\n\n/**\n * See:\n * https://firebase.google.com/docs/auth/web/auth-state-persistence\n */\nconst withLocalPersistence = () =>\n  firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\n\n/**\n * Email & password actions\n */\nexport const authSignUpWithEmail = (email, password) =>\n  withLocalPersistence().then(() =>\n    firebase.auth().createUserWithEmailAndPassword(email, password),\n  );\n\nexport const authLogInWithEmail = (email, password) =>\n  withLocalPersistence().then(() =>\n    firebase.auth().signInWithEmailAndPassword(email, password),\n  );\n\nexport const authSendPasswordResetEmail = (email) =>\n  firebase.auth().sendPasswordResetEmail(email);\n\nexport const authSignOut = () => firebase.auth().signOut();\n\nexport const authDeleteCurrentUser = () => firebase.auth().currentUser.delete();\n\n// Login with Facebook and keep the session in Firebase\nexport const authWithFacebook = async () =>\n  Facebook.logInWithReadPermissionsAsync(facebookConfig.appId, {\n    permissions: ['email', 'public_profile'],\n  }).then(async (response) => {\n    if (response.type === 'cancel') return { cancelledByUser: true };\n    // response.type === 'success'\n    const { token } = response;\n    const oauthCredential = firebase.auth.FacebookAuthProvider.credential(token);\n    return {\n      cancelledByUser: false,\n      userCredential: await firebase\n        .auth()\n        .signInWithCredential(oauthCredential),\n    };\n  });\n\nexport const authWithGoogle = () =>\n  Google.logInAsync({\n    androidClientId: googleConfig.androidClientId,\n    androidStandaloneAppClientId: googleConfig.androidClientId,\n    iosClientId: googleConfig.iosClientId,\n    iosStandaloneAppClientId: googleConfig.iosClientId,\n\n    // TODO: this paramater is required by ts from expo's package but is not\n    // mentioned in API reference here:\n    // https://docs.expo.io/versions/latest/sdk/google/\n    //\n    // github issue started: https://github.com/expo/expo/issues/6393\n    clientId: 'no default client id',\n    scopes: ['profile', 'email'],\n  }).then((loginResult) => {\n    if (loginResult.type === 'cancel')\n      return Promise.resolve({ cancelledByUser: true, userCredential: null });\n\n    // response.type === 'success'\n    const { idToken, accessToken } = loginResult;\n    const oauthCredential = firebase.auth.GoogleAuthProvider.credential(\n      idToken,\n      accessToken,\n    );\n    return firebase\n      .auth()\n      .signInWithCredential(oauthCredential)\n      .then((userCredential) => {\n        return { cancelledByUser: false, userCredential: userCredential };\n      });\n  });\n","import React, { useContext, useEffect, useRef, useState, Ref } from 'react';\n\nimport { TextInput, View, Platform, KeyboardAvoidingView } from 'react-native';\nimport { Button, Icon, Text } from 'react-native-elements';\n\nimport Delayed from './Delayed';\nimport LoadingIndicator from './LoadingIndicator';\nimport { Redirect } from '../routing';\n\nimport * as firebaseUtil from '../firebase-util';\nimport routes from '../client-routes';\nimport * as utils from '../utils';\n\nconst panic = (err) => {\n  utils.alertScreen(\"We're sorry, something went wrong.\", `${err.message}`);\n  console.log(`panicking: error code [${err.code}], message [${err.message}]`);\n};\n\nconst googleAuthOffered = Platform.select({\n  android: true,\n  ios: true,\n  default: false,\n});\n\nconst facebookAuthOffered = Platform.select({\n  android: true,\n  ios: true,\n  default: false,\n});\n\n// TODO(below): instead of alerts, show the invalidities dynamically,\n// like google material design input fields can do (i.e. w/ red underline & message)\n\nconst emailIsValid = (email) => {\n  if (!email || !email.trim()) {\n    utils.alertScreen('No email provided', 'Enter your email above.');\n    return false;\n  }\n\n  email = email.trim();\n\n  if (!/(^.+@.+\\..+$)/.test(email)) {\n    utils.alertScreen(\n      'Invalid email format',\n      'Email should look like \"you@example.com\".',\n    );\n    return false;\n  }\n\n  return true;\n};\n\nconst stringHasAnyWhitespace = (str: string): boolean =>\n  /[^\\s]*\\s[^\\s]*/.test(str);\n\nconst passwordIsValid = (password) => {\n  const passwordMinLength = 6;\n\n  if (!password) {\n    utils.alertScreen('No password provided', 'Enter your password above.');\n    return false;\n  }\n\n  if (stringHasAnyWhitespace(password)) {\n    utils.alertScreen('Password must not contain spaces.');\n    return false;\n  }\n\n  if (password.length < passwordMinLength) {\n    utils.alertScreen(\n      `Password must be ${passwordMinLength} or more characters (no spaces).`,\n    );\n    return false;\n  }\n\n  return true;\n};\n\nconst loginWithFacebook = (onCancel) =>\n  firebaseUtil.authWithFacebook().then((result) => {\n    if (result.cancelledByUser) onCancel();\n    console.log(\n      'logged in with facebook:',\n      JSON.stringify(result.userCredential),\n    );\n  });\n\nconst loginWithGoogle = (onCancel) =>\n  firebaseUtil\n    .authWithGoogle()\n    .then(({ cancelledByUser, userCredential }) => {\n      if (cancelledByUser) return;\n      console.log('logged in with google:', JSON.stringify(userCredential));\n    })\n    .catch((err) => {\n      // getting inexplicable error messages (stemming from native code)\n      // Issue created here: https://github.com/expo/expo/issues/6033\n\n      // For now, just swallow the error\n      console.log('inexplicable google signin error:', JSON.stringify(err));\n      onCancel();\n    });\n\nconst logUser = (user) =>\n  console.log('logged in with email:', JSON.stringify(user));\n\nexport default function LoginScreen(props) {\n  const { styles, colors } = useContext(utils.EotaStylesContext);\n\n  const auth = useContext(utils.AuthContext);\n\n  // TODO: will this scheme of redirection (potentially) cause a memory leak?\n  const [authenticated, setAuthenticated] = useState(!!auth.user);\n  useEffect(() => {\n    setAuthenticated(!!auth.user);\n  }, [auth.user]);\n\n  const referrer: string = props.location.state\n    ? props.location.state.referrer || routes.home\n    : routes.home;\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [signingUp, setSigningUp] = useState(false);\n\n  const [indicateLoggingIn, setIndicateLoggingIn] = useState(false);\n  const startLogin = () => setIndicateLoggingIn(true);\n  const cancelLogin = () => setIndicateLoggingIn(false);\n\n  const emailInputRef = useRef<TextInput>(null);\n  const passwordInputRef = useRef<TextInput>(null);\n  const focusPasswordInput = () => passwordInputRef.current.focus();\n\n  const loginWith = (loginFn: () => Promise<void>) => {\n    startLogin();\n    return loginFn().catch((err) => {\n      cancelLogin();\n      panic(err);\n    });\n  };\n\n  const submitEmailAndPasswordForm = () => {\n    const loginEmail = email;\n    const loginPassword = password;\n    if (!emailIsValid(loginEmail) || !passwordIsValid(loginPassword)) return;\n    setPassword(null);\n\n    const loginFn = signingUp\n      ? () => firebaseUtil.authSignUpWithEmail(loginEmail, loginPassword)\n      : () => firebaseUtil.authLogInWithEmail(loginEmail, loginPassword);\n\n    loginWith(() => loginFn().then(logUser));\n  };\n\n  const emailInput = (\n    <EmailInput\n      ref={emailInputRef}\n      onChangeText={setEmail}\n      // on linefeed, send to password field\n      onSubmitEditing={focusPasswordInput}\n    />\n  );\n  const passwordInput = (\n    <PasswordInput\n      ref={passwordInputRef}\n      onChangeText={setPassword}\n      // on linefeed, try to login\n      onSubmitEditing={submitEmailAndPasswordForm}\n    />\n  );\n\n  const loginForm = (\n    <View>\n      {emailInput}\n\n      {passwordInput}\n\n      <Button\n        title=\"Login\"\n        titleStyle={styles.eotaButtonTitle}\n        onPress={submitEmailAndPasswordForm}\n        buttonStyle={styles.eotaButton}\n        style={{ marginBottom: 5 }}\n      />\n      {/* Facebook login */}\n      {facebookAuthOffered && (\n        <Button\n          title=\"Continue with Facebook\"\n          onPress={() => loginWith(() => loginWithFacebook(cancelLogin))}\n          buttonStyle={{ ...styles.fbLoginButton }}\n          titleStyle={{ color: colors.prettyBlue }}\n          icon={{ type: 'feather', name: 'facebook', color: colors.prettyBlue }}\n          iconContainerStyle={{ marginHorizontal: 10 }}\n          style={{ borderWidth: 0 }}\n        />\n      )}\n      {/* Google login */}\n      {googleAuthOffered && (\n        <Button\n          title=\"Continue with Google\"\n          onPress={() => loginWith(() => loginWithGoogle(cancelLogin))}\n          buttonStyle={styles.googleLoginButton}\n          titleStyle={{ color: colors.googleRed }}\n          icon={{\n            type: 'font-awesome',\n            name: 'google',\n            color: colors.googleRed,\n          }}\n          iconContainerStyle={{ marginHorizontal: 11 }}\n          style={{ borderWidth: 0 }}\n        />\n      )}\n    </View>\n  );\n\n  const signupForm = (\n    <View>\n      {emailInput}\n      {passwordInput}\n      <Button\n        title=\"Sign up\"\n        titleStyle={{ color: colors.buttonDarkText }}\n        onPress={submitEmailAndPasswordForm}\n        buttonStyle={styles.emailLoginButton}\n        icon={{\n          type: 'feather',\n          name: 'arrow-right',\n          color: colors.buttonDarkText,\n        }}\n        iconRight\n        iconContainerStyle={{ marginHorizontal: 10 }}\n      />\n    </View>\n  );\n\n  // redirect back if/once a user is authenticated\n  if (authenticated) return <Redirect push to={referrer} />;\n\n  if (indicateLoggingIn) {\n    return (\n      <Delayed delayMs={150}>\n        <View>\n          <LoadingIndicator />\n          <Text style={styles.paragraph}>logging you in...</Text>\n        </View>\n      </Delayed>\n    );\n  }\n\n  return (\n    <utils.KeyboardDismissable>\n      <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n        <View style={{ flex: 1, flexDirection: 'column' }}>\n          {/* Title */}\n          <View\n            style={{\n              flex: 5,\n              margin: 10,\n              marginTop: 35,\n              justifyContent: 'flex-end',\n            }}\n          >\n            <Icon type=\"feather\" name=\"feather\" size={45} />\n            <Text style={styles.logoText}>eota</Text>\n          </View>\n\n          {/* Login / signup form */}\n          <View style={{ flex: 8 }}>{signingUp ? signupForm : loginForm}</View>\n\n          {/* Toggle login / signup */}\n          <View style={{ flex: 1, justifyContent: 'flex-end' }}>\n            {signingUp ? (\n              <Button\n                title=\"Log in instead\"\n                titleStyle={{ color: colors.prettyBlue }}\n                onPress={() => setSigningUp(false)}\n                buttonStyle={styles.transparentButton}\n              />\n            ) : (\n              <Button\n                title=\"Sign up\"\n                titleStyle={{ color: colors.prettyBlue }}\n                onPress={() => setSigningUp(true)}\n                buttonStyle={styles.transparentButton}\n              />\n            )}\n          </View>\n        </View>\n      </KeyboardAvoidingView>\n    </utils.KeyboardDismissable>\n  );\n}\n\ninterface FormInputParams {\n  onChangeText: (password: string) => void;\n  onSubmitEditing: () => void;\n}\n\nconst extraNativePropsEmail = Platform.select<any>({\n  ios: { textContentType: 'emailAddress' },\n  android: { autoCompleteType: 'email' },\n  default: null,\n});\n\nconst EmailInput = React.forwardRef(\n  ({ onChangeText, onSubmitEditing }: FormInputParams, ref: Ref<TextInput>) => {\n    const { styles } = useContext(utils.EotaStylesContext);\n\n    return (\n      <TextInput\n        placeholder=\"email\"\n        style={styles.loginFormTextInput}\n        keyboardType=\"email-address\"\n        clearButtonMode=\"while-editing\"\n        autoCapitalize=\"none\"\n        returnKeyType=\"next\"\n        ref={ref}\n        onChangeText={onChangeText}\n        onSubmitEditing={onSubmitEditing}\n        {...extraNativePropsEmail}\n      />\n    );\n  },\n);\n\nconst extraNativePropsPassword = Platform.select<any>({\n  ios: { textContentType: 'password' },\n  android: { autoCompleteType: 'password' },\n  default: null,\n});\n\nconst PasswordInput = React.forwardRef(\n  ({ onChangeText, onSubmitEditing }: FormInputParams, ref: Ref<TextInput>) => {\n    const { styles } = useContext(utils.EotaStylesContext);\n\n    return (\n      <TextInput\n        placeholder=\"password\"\n        style={styles.loginFormTextInput}\n        clearButtonMode=\"while-editing\"\n        autoCapitalize=\"none\"\n        secureTextEntry={true}\n        returnKeyType=\"go\"\n        ref={ref}\n        onChangeText={onChangeText}\n        onSubmitEditing={onSubmitEditing}\n        {...extraNativePropsPassword}\n      />\n    );\n  },\n);\n","import React, { useEffect, useState, useContext, useMemo } from 'react';\nimport { StyleSheet, View, Linking, Platform } from 'react-native';\nimport { Button, Text } from 'react-native-elements';\n\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport * as Permissions from 'expo-permissions';\nimport Icon from 'react-native-vector-icons/Feather';\n\nimport * as IntentLauncher from 'expo-intent-launcher';\n\nimport Delayed from './Delayed';\nimport * as utils from '../utils';\n\nimport Constants from 'expo-constants';\nimport LoadingIndicator from './LoadingIndicator';\n\nconst androidPkg = Constants.manifest.releaseChannel\n  ? Constants.manifest.android.package // When published, considered as using standalone build\n  : 'host.exp.exponent'; // In expo client mode\n\nconst openCameraSettingsAndroid = () =>\n  IntentLauncher.startActivityAsync(\n    IntentLauncher.ACTION_APPLICATION_DETAILS_SETTINGS,\n    { data: 'package:' + androidPkg },\n  );\n\nconst openCameraSettingsIOS = () => Linking.openURL('app-settings:');\n\nconst openCameraSettings = Platform.select({\n  android: openCameraSettingsAndroid,\n  ios: openCameraSettingsIOS,\n  default: null,\n});\n\nconst getCameraPermission = () =>\n  Permissions.askAsync(Permissions.CAMERA)\n    .then((response) => response.status === Permissions.PermissionStatus.GRANTED)\n    .catch((err) => {\n      const message = 'Unexpected error getting camera permission';\n      const detail = `Try closing and reopening the app. \nInfo: error code [${err.code}], error message [${err.message}]`;\n      console.error(message, detail);\n      utils.alertScreen(message, detail);\n      return false;\n    });\n\nexport default function BarcodeScanner(props) {\n  const { styles } = useContext(utils.EotaStylesContext);\n  const [hasCameraPermission, setHasCameraPermission] = useState(null);\n\n  // TODO: will refreshing this every time be a performance hit? If so,\n  // add `...}, []);` at the end to call only once. For background see:\n  // https://reactjs.org/docs/hooks-reference.html#conditionally-firing-an-effect\n  useEffect(() => {\n    if (Platform.OS === 'web') setHasCameraPermission(false);\n    else getCameraPermission().then((res) => setHasCameraPermission(res));\n  });\n\n  const handleBarCodeScanned = ({ type, data }) => {\n    console.log(\n      `Bar code scanned: type [${type}], data [${data}]. Emitting to parent.`,\n    );\n    props.emitResult({ type, data });\n  };\n\n  // based on camera permissions, choose what to display\n  const whatToDisplay = useMemo(() => {\n    switch (hasCameraPermission) {\n      case null:\n        // TODO: probably better to have a loading animation\n        return (\n          <Delayed delayMs={200}>\n            <View>\n              <LoadingIndicator />\n              <Text style={styles.paragraph}>\n                Requesting permission to access camera...\n              </Text>\n            </View>\n          </Delayed>\n        );\n      case true:\n        return (\n          <BarCodeScanner\n            onBarCodeScanned={handleBarCodeScanned}\n            // only permit qr codes (only qr is supported on iOS according to:\n            // https://docs.expo.io/versions/latest/sdk/bar-code-scanner/)\n            barCodeTypes={[BarCodeScanner.Constants.BarCodeType.qr]}\n            style={StyleSheet.absoluteFillObject}\n          />\n        );\n      case false:\n        return (\n          <View style={styles.container}>\n            <View style={{ margin: 35 }}>\n              <Icon name=\"frown\" size={75} style={{ textAlign: 'center' }} />\n            </View>\n            <Text style={styles.paragraph}>Unable to access the camera.</Text>\n            {openCameraSettings ? (\n              // if we know how to open camera settings, offer a button.\n              <Button\n                title=\"Open camera settings\"\n                onPress={openCameraSettings}\n              />\n            ) : (\n              <Text style={styles.paragraph}>\n                Enable camera access to continue.\n              </Text>\n            )}\n          </View>\n        );\n      default:\n        throw Error(\n          `something strange happened getting camera permissions, return value [${hasCameraPermission}]`,\n        );\n    }\n  }, [hasCameraPermission]);\n\n  const cancelButton = (\n    <Button\n      title=\"Go back\"\n      onPress={props.onCancel}\n      buttonStyle={styles.transparentButton}\n    />\n  );\n\n  // TODO: Maybe also include manual code entry (e.g. a form with\n  // https://eota.me/code/[enter-code-here])\n  return hasCameraPermission === true ? (\n    <View\n      style={{\n        ...StyleSheet.absoluteFillObject,\n        flex: 1,\n        flexDirection: 'column',\n      }}\n    >\n      {whatToDisplay}\n      <View style={{ flex: 1, justifyContent: 'flex-end' }}>{cancelButton}</View>\n    </View>\n  ) : (\n    <View style={styles.container}>\n      <View style={{ flex: 5, justifyContent: 'center' }}>{whatToDisplay}</View>\n      <View style={{ flex: 1, justifyContent: 'flex-end' }}>{cancelButton}</View>\n    </View>\n  );\n}\n","import React from 'react';\n\nimport QRCode from 'react-native-qrcode-svg';\nimport { TouchableOpacity, View } from 'react-native';\n\nexport const EOTA_LOGO_BLOB = require('./../assets/eota-qr-code-logo.png');\n\n// TODO: more appealing color? (beware: farther from black ~= harder to scan)\nconst EOTA_GREEN = '#113422';\n\nconst QR_CODE_SIZE = 250;\nconst QR_CODE_LOGO_SIZE_MULTIPLIER = 0.4;\n\ninterface EotaCodeProps {\n  value?: string;\n  size?: number;\n}\n\nconst EotaCode = ({ value, size }: EotaCodeProps) => (\n  <View>\n    <TouchableOpacity\n      style={{\n        borderRadius: 9,\n        borderWidth: 0.7,\n        borderColor: '#333',\n        overflow: 'hidden',\n      }}\n    >\n      <QRCode\n        value={value}\n        size={size || QR_CODE_SIZE}\n        logo={EOTA_LOGO_BLOB}\n        logoSize={(size || QR_CODE_SIZE) * QR_CODE_LOGO_SIZE_MULTIPLIER}\n        color={EOTA_GREEN}\n        backgroundColor=\"#fff\"\n        logoBackgroundColor=\"transparent\"\n        ecl={'Q'}\n        getRef={null}\n      />\n    </TouchableOpacity>\n  </View>\n);\n\nexport default EotaCode;\n","import React, { useContext, useState } from 'react';\nimport { View, Linking, KeyboardAvoidingView, Dimensions } from 'react-native';\nimport { Button, Input, Text, Icon } from 'react-native-elements';\n\nimport { Async, useFetch } from 'react-async';\nimport useInterval from '@use-it/interval';\n\nimport BarcodeScanner from './BarcodeScanner';\nimport Delayed from './Delayed';\nimport EotaCode from './EotaCode';\nimport LoadingIndicator from './LoadingIndicator';\nimport {\n  tryParsePaycode,\n  EotaStylesContext,\n  AuthContext,\n  KeyboardDismissable,\n  alertScreen,\n} from '../utils';\nimport routes from '../client-routes';\nimport { LinkButton } from '../routing-common';\nimport { Redirect } from '../routing';\n\nimport {\n  ApiErrorResponse,\n  TxnModel,\n  UserModel,\n} from '../../../server/firebase-eota/functions/src/api-types';\n\nconst EOTA_CODE_PREFIX = 'https://eota.me/code/';\nconst API_BASEURL = 'https://us-central1-eota-gcp.cloudfunctions.net/api';\n\ninterface ReqCreateTxnBody {\n  amount: string;\n  desc: string;\n  currency_code: string;\n}\n\nconst makeApiError = async (res: Response) =>\n  new ApiError(res, res.status, await res.json());\n\nclass ApiError extends Error {\n  status: number;\n  responseJson: any;\n  response: Response;\n  constructor(response, status, responseJson) {\n    super('Bad response from eota api: ');\n    this.name = 'ApiError';\n    this.status = status;\n    this.responseJson = responseJson;\n    this.response = response;\n  }\n}\n\nconst alertApiError = (err: any) => {\n  console.log('API call failure:', err);\n  const errorResponse = ((err && err.responseJson) ||\n    null) as ApiErrorResponse | null;\n  const errorMessage =\n    (errorResponse && errorResponse.errorMessage) ||\n    'something unexpected happened';\n\n  alertScreen('Error:', errorMessage);\n};\n\nconst getHeaders = (token: string) => ({\n  'Content-Type': 'application/json',\n  Authorization: `Bearer ${token}`,\n  Accept: 'application/json',\n});\n\nconst eotaApiCreateTransaction = async (\n  { body, token }: { body: ReqCreateTxnBody; token: string },\n  { signal },\n) => {\n  const res = await fetch(`${API_BASEURL}/transaction`, {\n    method: 'POST',\n    body: JSON.stringify(body),\n    headers: getHeaders(token),\n    signal,\n  });\n  if (!res.ok) throw await makeApiError(res);\n  return res.json();\n};\n\nconst getDateString = (timeUsec: number) => new Date(timeUsec).toLocaleString();\n\nconst TransactionInfo = ({ txn }: { txn: TxnModel }) => {\n  const { styles, colors } = useContext(EotaStylesContext);\n  const { paragraph: p } = styles;\n  return (\n    <View\n      style={{\n        flex: 1,\n        justifyContent: 'flex-start',\n        alignContent: 'center',\n        marginTop: 15,\n      }}\n    >\n      <Text style={{ ...p, fontWeight: 'bold', marginBottom: 15 }}>\n        Payment info:\n      </Text>\n      <Text style={{ ...p, textAlign: 'left' }}>\n        Amount: ${txn.amount}\n        {'\\n'}\n        To: {txn.recipientDisplayName || txn.recipientEmail}\n        {'\\n'}\n        For: {txn.desc}\n        {'\\n'}\n        Created: {getDateString(txn.timeUsecCreated)}\n        {'\\n'}\n      </Text>\n      <Text\n        onPress={() => Linking.openURL('https://eota.me')}\n        style={{\n          ...p,\n          fontSize: 16,\n          color: colors.prettyBlue,\n          textDecorationLine: 'underline',\n        }}\n      >\n        Transaction ID: {txn.id}\n        {'\\n'}\n      </Text>\n    </View>\n  );\n};\n\nconst MAX_QR_DIM = 250;\nconst QR_SCALE_DOWN_THRESHOLD_HEIGHT = 550;\nconst getQRCodeSize = () => {\n  const { height, width } = Dimensions.get('window');\n  const heightOverflow = QR_SCALE_DOWN_THRESHOLD_HEIGHT - height;\n  const result = heightOverflow > 0 ? MAX_QR_DIM - heightOverflow : MAX_QR_DIM;\n  return result;\n};\n\nconst CreateTransaction = ({ body }: { body: ReqCreateTxnBody }) => {\n  const { userIdToken } = useContext(AuthContext);\n  const { styles } = useContext(EotaStylesContext);\n  const { paragraph: p } = styles;\n\n  return (\n    <Async\n      promiseFn={eotaApiCreateTransaction}\n      onReject={alertApiError}\n      body={body}\n      token={userIdToken}\n    >\n      <Async.Pending>\n        <Delayed delayMs={150}>\n          <View>\n            <LoadingIndicator />\n            <Text style={p}>setting things up...</Text>\n          </View>\n        </Delayed>\n      </Async.Pending>\n      <Async.Fulfilled>\n        {(txn: TxnModel) => <ShowTransaction txn={txn} />}\n      </Async.Fulfilled>\n    </Async>\n  );\n};\n\nconst AWAIT_PAYMENT_POLLING_INTERVAL = 2500;\n\nconst ShowTransaction = ({ txn }: { txn: TxnModel }) => {\n  const { userIdToken } = useContext(AuthContext);\n  const { styles, colors } = useContext(EotaStylesContext);\n  const p = styles.paragraph;\n\n  const { data, setData, error, run, reload } = useFetch<TxnModel>(\n    `${API_BASEURL}/transaction/${txn.id}`,\n    {\n      method: 'GET',\n      headers: getHeaders(userIdToken),\n    },\n  );\n  const [pollingInterval, setPollingInterval] = useState(\n    AWAIT_PAYMENT_POLLING_INTERVAL,\n  );\n  const cancelPolling = () => setPollingInterval(null);\n  run();\n  useInterval(() => {\n    if (data) {\n      if (data.timeUsecPaid) {\n        cancelPolling();\n      } else {\n        setData(null);\n        reload();\n      }\n    } else if (error) {\n      console.warn('error on fetch', error);\n      setData(null);\n      reload();\n    }\n  }, pollingInterval);\n\n  if (data && data.timeUsecPaid) {\n    return (\n      <View>\n        <Icon\n          type=\"feather\"\n          name=\"check-circle\"\n          size={50}\n          color={colors.prettyBlue}\n          style={{ fontWeight: '300' }}\n        />\n        <Text\n          style={{ ...p, margin: 20 }}\n        >{`$${data.amount} paid in full.`}</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={{ ...styles.container, justifyContent: 'flex-start' }}>\n      <View style={{ flex: 4, marginBottom: 12, justifyContent: 'flex-end' }}>\n        <TransactionInfo txn={txn} />\n      </View>\n\n      {/* QR code */}\n      <View\n        style={{\n          flex: 5,\n          justifyContent: 'flex-start',\n          alignItems: 'center',\n          margin: 12,\n        }}\n      >\n        <EotaCode\n          value={`${EOTA_CODE_PREFIX}${txn.id}`}\n          size={getQRCodeSize()}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport const StartTransaction = () => {\n  const { styles } = useContext(EotaStylesContext);\n  const [amount, setAmount] = useState('');\n  const [description, setDescription] = useState('');\n  const [inputCommitted, setInputCommitted] = useState(false);\n\n  const tryCreateTxn = () => {\n    if (!amount) {\n      alertScreen('Must provide a dollar amount');\n      return;\n    }\n    if (!/[1-9]/.test(amount)) {\n      alertScreen('Must be at least $0.01');\n      return;\n    }\n    const errorMsg = getDollarsErrorMsg(amount);\n    if (errorMsg) {\n      alertScreen(errorMsg);\n      return;\n    }\n\n    setInputCommitted(true);\n  };\n\n  if (inputCommitted) {\n    return (\n      <View style={{ ...styles.container }}>\n        <View style={{ flex: 6, justifyContent: 'center' }}>\n          <CreateTransaction\n            body={{ currency_code: 'usd', amount, desc: description }}\n          />\n        </View>\n        <View style={{ flex: 1, justifyContent: 'flex-end' }}>\n          <LinkButton\n            to={routes.home}\n            title=\"Go back\"\n            buttonStyle={styles.transparentButton}\n          />\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <KeyboardDismissable>\n      <KeyboardAvoidingView\n        behavior=\"padding\"\n        style={{ flex: 1, justifyContent: 'center' }}\n      >\n        {/* Input invoice info */}\n        <View style={{ flex: 7, justifyContent: 'center' }}>\n          <DollarsInput onChangeText={setAmount} />\n          <DescriptionInput onChangeText={setDescription} />\n        </View>\n\n        {/* Commit info & get code / Go back */}\n        <View style={{ flex: 1, justifyContent: 'flex-end' }}>\n          <Button\n            onPress={tryCreateTxn}\n            title=\"Get Code\"\n            buttonStyle={styles.commitButton}\n            titleStyle={{ color: '#fff' }}\n            icon={{\n              type: 'material-community',\n              name: 'qrcode-scan',\n              color: '#fff',\n              size: 21,\n            }}\n            iconRight\n            iconContainerStyle={{ marginHorizontal: 12, paddingTop: 1 }}\n          />\n          <LinkButton\n            to={routes.home}\n            title=\"Cancel\"\n            buttonStyle={styles.transparentButton}\n          />\n        </View>\n      </KeyboardAvoidingView>\n    </KeyboardDismissable>\n  );\n};\n\nconst SEP = '.'; // decimal fraction separator\nconst getDollarsErrorMsg = (val: string): string | null => {\n  if (!RegExp(`^[0-9\\\\${SEP}]*$`).exec(val))\n    return `Only 0-9 and ${SEP} allowed`;\n  const split = val.split(SEP);\n  if (split.length > 2) return `Only one ${SEP} allowed`;\n  if (split[1] && split[1].length > 2)\n    return `No more than 2 decimal places (e.g. 100${SEP}00)`;\n  return null;\n};\n\nconst DollarsInput = ({ onChangeText }) => {\n  const [errorMsg, setErrorMsg] = useState('');\n\n  return (\n    <Input\n      keyboardType=\"numeric\"\n      placeholder={`0${SEP}00`}\n      leftIcon={{ type: 'feather', name: 'dollar-sign' }}\n      leftIconContainerStyle={{ marginLeft: 0, marginRight: 8 }}\n      errorStyle={{ color: 'red' }}\n      errorMessage={errorMsg}\n      clearButtonMode=\"always\"\n      onChangeText={(t) => {\n        setErrorMsg(getDollarsErrorMsg(t));\n        onChangeText(t);\n      }}\n      style={{ color: '#222' }}\n      inputStyle={{\n        fontFamily: 'montserrat-medium',\n        color: '#222',\n        fontSize: 24,\n      }}\n      containerStyle={{ marginBottom: 30 }}\n    />\n  );\n};\n\nconst MAX_DESCRIPTION_LENGTH = 1000;\n// this is a hard limit passed to UI components\nconst MAX_DESCRIPTION_LENGTH_UI = MAX_DESCRIPTION_LENGTH * 2;\nconst NUM_REMAINING_WARN_THRESHOLD = 100;\nconst yellow = '#ebc600';\n\nconst getTxnDescriptionError = (\n  text: string,\n): { message?: string; color?: string } => {\n  const remaining = MAX_DESCRIPTION_LENGTH - text.length;\n  if (remaining <= NUM_REMAINING_WARN_THRESHOLD)\n    return {\n      message: `${text.length}/${MAX_DESCRIPTION_LENGTH}`,\n      color: remaining <= 0 ? 'red' : yellow,\n    };\n\n  return {};\n};\n\nconst DescriptionInput = ({ onChangeText }) => {\n  const { styles } = useContext(EotaStylesContext);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [errorColor, setErrorColor] = useState(null);\n  return (\n    <Input\n      keyboardType=\"default\"\n      placeholder=\"What’s it for?\"\n      maxLength={MAX_DESCRIPTION_LENGTH_UI}\n      leftIcon={{ type: 'feather', name: 'edit-2', size: 22 }}\n      leftIconContainerStyle={{\n        marginLeft: 4,\n        marginRight: 8,\n      }}\n      errorMessage={errorMsg}\n      errorStyle={{ color: errorColor }}\n      clearButtonMode=\"always\"\n      onChangeText={(t) => {\n        const { message, color } = getTxnDescriptionError(t);\n        setErrorMsg(message);\n        setErrorColor(color);\n        onChangeText(t);\n      }}\n      style={styles.eotaTextInput}\n    />\n  );\n};\n\n// Send payment\n\ninterface IScannedBarcode {\n  type: string;\n  data: string;\n}\n\nexport const PayInStore = () => {\n  const { styles } = useContext(EotaStylesContext);\n\n  const [paycode, setPaycode] = useState<string>(null);\n  const [userCancelled, setUserCancelled] = useState(false);\n  const [paymentConfirmed, setPaymentConfirmed] = useState(false);\n\n  const receiveBarcode = ({ data }: IScannedBarcode) => {\n    const [isValidPaycode, result] = tryParsePaycode(data);\n    if (isValidPaycode) {\n      setPaycode(result.paycode);\n    } else {\n      // TODO(nolan): indicate to user if theyre trying to scan an unauthorized\n      // code (rather than just seeming like nothing's happening)\n    }\n  };\n\n  if (userCancelled) return <Redirect push to={routes.home} />;\n\n  // first, scan the code from the user\n  if (!paycode)\n    return (\n      <BarcodeScanner\n        emitResult={receiveBarcode}\n        onCancel={() => setUserCancelled(true)}\n      />\n    );\n\n  return (\n    <View style={{ flex: 1, justifyContent: 'center' }}>\n      <View style={{ flex: 10, justifyContent: 'center' }}>\n        {paymentConfirmed ? (\n          <PayInvoice invoiceId={paycode} />\n        ) : (\n          <DisplayInvoice\n            invoiceId={paycode}\n            onSendPayment={() => setPaymentConfirmed(true)}\n          />\n        )}\n      </View>\n      <View style={{ flex: 1, justifyContent: 'flex-end' }}>\n        <LinkButton\n          to={routes.home}\n          title=\"Go back\"\n          buttonStyle={styles.transparentButton}\n        />\n      </View>\n    </View>\n  );\n};\n\ninterface ReqGetTxnParams {\n  invoiceId: string;\n}\n\nconst eotaApiRequestTxn = async (\n  { params, token }: { params: ReqGetTxnParams; token: string },\n  { signal },\n) => {\n  const res = await fetch(`${API_BASEURL}/transaction/${params.invoiceId}`, {\n    method: 'GET',\n    headers: getHeaders(token),\n    signal,\n  });\n  if (!res.ok) throw await makeApiError(res);\n  return res.json();\n};\n\nexport const DisplayInvoice = ({ invoiceId, onSendPayment }) => {\n  const { userIdToken } = useContext(AuthContext);\n  const { styles } = useContext(EotaStylesContext);\n  const { paragraph: p } = styles;\n\n  return (\n    <Async\n      promiseFn={eotaApiRequestTxn}\n      onReject={alertApiError}\n      params={{ invoiceId }}\n      token={userIdToken}\n    >\n      <Async.Pending>\n        <Delayed delayMs={150}>\n          <View>\n            <LoadingIndicator />\n            <Text style={p}>setting things up...</Text>\n          </View>\n        </Delayed>\n      </Async.Pending>\n      <Async.Fulfilled>\n        {(txn: TxnModel) => (\n          <View style={{ ...styles.container, justifyContent: 'flex-end' }}>\n            <View style={{ flex: 1 }} />\n            <View\n              style={{ flex: 1, marginBottom: 12, justifyContent: 'flex-end' }}\n            >\n              <TransactionInfo txn={txn} />\n            </View>\n\n            <View style={{ flex: 1, justifyContent: 'flex-start' }}>\n              <Button\n                onPress={onSendPayment}\n                title=\"Pay\"\n                buttonStyle={styles.commitButton}\n                titleStyle={{ color: '#fff' }}\n                icon={{\n                  type: 'font-awesome',\n                  name: 'credit-card',\n                  color: '#fff',\n                  size: 21,\n                }}\n                iconRight\n                iconContainerStyle={{ marginHorizontal: 12, paddingTop: 1 }}\n              />\n            </View>\n          </View>\n        )}\n      </Async.Fulfilled>\n      <Async.Rejected>\n        <Text>fdadfasgasdhhhhhh</Text>\n      </Async.Rejected>\n    </Async>\n  );\n};\n\nconst eotaApiPayTxn = async (\n  { params, token }: { params: ReqGetTxnParams; token: string },\n  { signal },\n) => {\n  const res = await fetch(`${API_BASEURL}/transaction/${params.invoiceId}/pay`, {\n    method: 'PUT',\n    headers: getHeaders(token),\n    signal,\n  });\n  if (!res.ok) throw await makeApiError(res);\n  return res.json();\n};\n\nexport const PayInvoice = ({ invoiceId }) => {\n  const { userIdToken } = useContext(AuthContext);\n  const { styles, colors } = useContext(EotaStylesContext);\n  const { paragraph: p } = styles;\n\n  return (\n    <Async\n      promiseFn={eotaApiPayTxn}\n      onReject={alertApiError}\n      params={{ invoiceId }}\n      token={userIdToken}\n    >\n      <Async.Pending>\n        <Delayed delayMs={150}>\n          <View>\n            <LoadingIndicator />\n            <Text style={p}>sending payment...</Text>\n          </View>\n        </Delayed>\n      </Async.Pending>\n      <Async.Fulfilled>\n        {(data: TxnModel) => (\n          <View>\n            <Icon\n              type=\"feather\"\n              name=\"check-circle\"\n              size={50}\n              color={colors.prettyBlue}\n              style={{ fontWeight: '300' }}\n            />\n            <Text\n              style={{ ...p, margin: 20 }}\n            >{`Paid $${data.amount} in full.`}</Text>\n          </View>\n        )}\n      </Async.Fulfilled>\n    </Async>\n  );\n};\n\nconst eotaApiGetUser = async (\n  { uid, token }: { uid: string; token: string },\n  { signal },\n) => {\n  const res = await fetch(`${API_BASEURL}/user/${uid}`, {\n    method: 'GET',\n    headers: getHeaders(token),\n    signal,\n  });\n  if (!res.ok) throw await makeApiError(res);\n  return res.json();\n};\n\nexport const CheckBalance = () => {\n  const { user: authUser, userIdToken } = useContext(AuthContext);\n  const { styles } = useContext(EotaStylesContext);\n  const { paragraph: p } = styles;\n\n  const [addingMoney, setAddingMoney] = useState(false);\n\n  return (\n    <Async\n      promiseFn={eotaApiGetUser}\n      onReject={alertApiError}\n      uid={authUser.uid}\n      token={userIdToken}\n    >\n      <Async.Pending>\n        <Delayed delayMs={150}>\n          <View>\n            <LoadingIndicator />\n            <Text style={p}>opening your account...</Text>\n          </View>\n        </Delayed>\n      </Async.Pending>\n      <Async.Fulfilled>\n        {(user: UserModel) => (\n          <KeyboardAvoidingView\n            behavior=\"padding\"\n            style={{ ...styles.container, justifyContent: 'center' }}\n          >\n            <View style={{ flex: 10, justifyContent: 'center' }}>\n              {addingMoney ? (\n                <AddMoneyView onCancel={() => setAddingMoney(false)} />\n              ) : (\n                <SeeBalanceView\n                  user={user}\n                  onAddMoney={() => setAddingMoney(true)}\n                />\n              )}\n            </View>\n            <View style={{ flex: 1, justifyContent: 'flex-end' }}>\n              <LinkButton\n                to={routes.home}\n                title=\"Go back\"\n                buttonStyle={styles.transparentButton}\n              />\n            </View>\n          </KeyboardAvoidingView>\n        )}\n      </Async.Fulfilled>\n    </Async>\n  );\n};\n\nconst AddMoneyView = ({ onCancel }) => {\n  const { user: authUser, userIdToken } = useContext(AuthContext);\n  const { styles, colors } = useContext(EotaStylesContext);\n  const p = styles.paragraph;\n\n  const [amount, setAmount] = useState('');\n\n  const { data, setData, error, isPending, run } = useFetch(\n    `${API_BASEURL}/user/${authUser.uid}/balance`,\n    {\n      method: 'POST',\n      headers: getHeaders(userIdToken),\n    },\n  );\n\n  const [json, setJson] = useState<UserModel | null>(null);\n\n  const tryAddMoney = async () => {\n    const amountToAdd = amount;\n    if (!amountToAdd) {\n      alertScreen('Must provide a dollar amount');\n      return;\n    }\n    if (!/[1-9]/.test(amountToAdd)) {\n      alertScreen(`Must be at least $0${SEP}01`);\n      return;\n    }\n    const errorMsg = getDollarsErrorMsg(amountToAdd);\n    if (errorMsg) {\n      alertScreen(errorMsg);\n      return;\n    }\n\n    run({ body: JSON.stringify({ addition: amountToAdd }) });\n  };\n  const getjson = async () => {\n    setJson(await data.json());\n  };\n\n  if (error) {\n    alertApiError(error);\n    setData(null);\n  } else if (isPending) {\n    return (\n      <Delayed delayMs={150}>\n        <View>\n          <LoadingIndicator />\n          <Text style={p}>transferring money to your account...</Text>\n        </View>\n      </Delayed>\n    );\n  } else if (data && json) {\n    const user = data as UserModel;\n    return (\n      <View>\n        <Icon\n          type=\"feather\"\n          name=\"check-circle\"\n          size={50}\n          color={colors.prettyBlue}\n          style={{ fontWeight: '300' }}\n        />\n        <Text\n          style={{ ...p, margin: 20 }}\n        >{`Total balance now $${user.balanceUSD}.`}</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={{ ...styles.container, flex: 10, justifyContent: 'center' }}>\n      <View style={{ flex: 1, justifyContent: 'flex-end' }}>\n        <DollarsInput onChangeText={setAmount} />\n      </View>\n\n      <View style={{ flex: 1, justifyContent: 'flex-start' }}>\n        <Button\n          onPress={tryAddMoney}\n          title=\"Submit\"\n          buttonStyle={styles.commitButton}\n          titleStyle={{ color: '#fff' }}\n          icon={{\n            type: 'feather',\n            name: 'credit-card',\n            color: '#fff',\n            size: 21,\n          }}\n          iconRight\n          iconContainerStyle={{\n            marginLeft: 12,\n            paddingTop: 1,\n          }}\n        />\n        <Button\n          title=\"Cancel\"\n          onPress={onCancel}\n          style={{ margin: 10 }}\n          icon={{ type: 'feather', name: 'corner-left-down', size: 21 }}\n          iconContainerStyle={{ marginRight: 12 }}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst SeeBalanceView = ({\n  user,\n  onAddMoney,\n}: {\n  user: UserModel;\n  onAddMoney: any;\n}) => {\n  const { styles } = useContext(EotaStylesContext);\n  const p = styles.paragraph;\n\n  return (\n    <View style={{ ...styles.container, flex: 10 }}>\n      <View style={{ flex: 1, justifyContent: 'flex-end' }}>\n        <Text\n          style={{\n            ...p,\n            color: '#222',\n            fontFamily: 'montserrat-medium',\n            fontSize: 26,\n            paddingBottom: 8,\n          }}\n        >\n          Balance:\n        </Text>\n        <Button\n          title={user.balanceUSD}\n          disabled\n          disabledStyle={{ backgroundColor: '#fff' }}\n          disabledTitleStyle={{\n            fontSize: 32,\n            paddingVertical: 18,\n            paddingHorizontal: 5,\n            fontFamily: 'montserrat-medium',\n            color: '#222',\n          }}\n          icon={{ type: 'feather', name: 'dollar-sign' }}\n          iconContainerStyle={{\n            marginHorizontal: 0.5,\n            justifyContent: 'center',\n            alignContent: 'center',\n            alignItems: 'center',\n          }}\n        />\n      </View>\n      <View style={{ flex: 1, justifyContent: 'flex-start' }}>\n        <Button\n          onPress={onAddMoney}\n          title=\"Add Money\"\n          style={{ margin: 20 }}\n          icon={{\n            type: 'feather',\n            name: 'corner-right-up',\n            size: 21,\n          }}\n          iconRight\n          iconContainerStyle={{ marginHorizontal: 12 }}\n          buttonStyle={{ ...styles.eotaButton, borderWidth: 0 }}\n        />\n      </View>\n    </View>\n  );\n};\n","// TODO: i18n for titles, messages to user, etc.\n// TODO(nolan): protect with touch id and equivalent by default\n// TODO: should we add something like mixpanel for usage statistics?\n\nimport React, { useState } from 'react';\nimport { Animated, View } from 'react-native';\nimport { ThemeProvider, FullTheme } from 'react-native-elements';\n\nimport { AppLoading } from 'expo';\nimport { Asset } from 'expo-asset';\nimport * as Font from 'expo-font';\n\nimport HomePage from './components/HomePage';\nimport LoginScreen from './components/LoginScreen';\nimport {\n  StartTransaction,\n  PayInStore,\n  CheckBalance,\n} from './components/Transactions';\n\nimport * as firebaseUtil from './firebase-util';\nimport {\n  AuthContext,\n  EotaStylesContext,\n  RouteAuthed,\n  alertScreen,\n} from './utils';\n\nimport routes from './client-routes';\nimport { Redirect, Route, Switch, Router } from './routing';\n\nimport styles, { colors } from './styles';\nimport * as baseStyles from './styles';\n\nconst theme: Partial<FullTheme> = {\n  Button: {\n    buttonStyle: {\n      ...baseStyles.eotaButtonBase,\n    },\n    titleStyle: {\n      color: colors.buttonDarkText,\n    },\n  },\n  colors: {\n    primary: '#fff',\n    secondary: '#999',\n  },\n};\n\nfirebaseUtil.firebaseInit();\n\nconst logOut = () =>\n  firebaseUtil\n    .authSignOut()\n    .catch((err) =>\n      alertScreen(\n        `Error logging out: error code [${err.code}], message [${err.message}]`,\n      ),\n    );\n\nconst EotaApp = () => {\n  const [user, setUser] = useState(firebaseUtil.getCurrentUser());\n  const [userIdToken, setUserIdToken] = useState(null);\n\n  firebaseUtil.onAuthStateChanged(async (user) => {\n    // keep user & token always up to date with firebase auth\n    setUser(user);\n    if (!user) return;\n    try {\n      setUserIdToken(await user.getIdToken(/* forceRefresh */ true));\n    } catch (err) {\n      console.log(\n        `could not update user token. error code: [${err.code}], message: [${\n          err.message\n        }], user: [${JSON.stringify(user)}]`,\n      );\n    }\n  });\n\n  return (\n    <AuthContext.Provider\n      value={{ user: user, userIdToken: userIdToken, logOut: logOut }}\n    >\n      <EotaStylesContext.Provider value={{ styles: styles, colors: colors }}>\n        <ThemeProvider theme={theme}>\n          <View\n            style={{ flexDirection: 'row', flex: 1, justifyContent: 'center' }}\n          >\n            <FadeInView>\n              <Router>\n                <Redirect to={routes.home} />\n                <Switch>\n                  <Route path={routes.login} component={LoginScreen} />\n                  <RouteAuthed path={routes.home} component={HomePage} />\n                  <RouteAuthed path={routes.payInStore} component={PayInStore} />\n                  <RouteAuthed\n                    path={routes.startTransaction}\n                    component={StartTransaction}\n                  />\n                  <RouteAuthed path={routes.balance} component={CheckBalance} />\n                </Switch>\n              </Router>\n            </FadeInView>\n          </View>\n        </ThemeProvider>\n      </EotaStylesContext.Provider>\n    </AuthContext.Provider>\n  );\n};\n\nconst FadeInView = (props) => {\n  const [fadeInAnimation] = useState(new Animated.Value(0));\n\n  React.useEffect(() => {\n    Animated.timing(fadeInAnimation, { toValue: 1, duration: 600 }).start();\n  }, []);\n\n  return (\n    <Animated.View style={{ ...styles.container, opacity: fadeInAnimation }}>\n      {props.children}\n    </Animated.View>\n  );\n};\n\nconst BLOBS = [\n  require('./assets/eota-qr-code-logo.png'),\n  require('./assets/eota-qr-code-logo-full-splash.png'),\n  require('./assets/feather-1024-white-background.png'),\n];\n\nfunction AsyncLoadApp(props) {\n  const [assetsReady, setAssetsReady] = useState(false);\n  const loadAssets = async () => {\n    await Promise.all(\n      BLOBS.map((blob) => Asset.fromModule(blob).downloadAsync()),\n    );\n    await Font.loadAsync({\n      'montserrat-extra-light': require('./assets/Montserrat-ExtraLight.ttf'),\n      'montserrat-medium': require('./assets/Montserrat-Medium.ttf'),\n    });\n  };\n\n  if (!assetsReady) {\n    return (\n      <AppLoading\n        startAsync={loadAssets}\n        onFinish={() => setAssetsReady(true)}\n        onError={console.warn}\n      />\n    );\n  }\n\n  return <props.component />;\n}\n\nexport default function App() {\n  return <AsyncLoadApp component={EotaApp} />;\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/eota-qr-code-logo-full-splash.8e4a826e.png\";","module.exports = __webpack_public_path__ + \"static/media/feather-1024-white-background.bae604b5.png\";","module.exports = __webpack_public_path__ + \"./fonts/Montserrat-ExtraLight.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Montserrat-Medium.ttf\";"],"sourceRoot":""}